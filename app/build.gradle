/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    mavenCentral()
    maven {
        url "https://repo.akka.io/maven"
    }
}

def versions = [
  AkkaVersion: "2.10.0",
  ScalaBinary: "2.13"
]

dependencies {
    // Use Scala 2.13 in our library project
    implementation libs.scala.library

    // This dependency is used by the application.
    implementation libs.guava

    //akka http
    implementation platform("com.typesafe.akka:akka-http-bom_${versions.ScalaBinary}:10.7.0")
    implementation "com.typesafe.akka:akka-actor-typed_${versions.ScalaBinary}:${versions.AkkaVersion}"
    implementation "com.typesafe.akka:akka-stream_${versions.ScalaBinary}:${versions.AkkaVersion}"
    implementation "com.typesafe.akka:akka-http_${versions.ScalaBinary}"


    // Use Scalatest for testing our library
    testImplementation libs.junit
    testImplementation libs.scalatest.v2.v13
    testImplementation libs.junit.v4.v13.v2.v13

    // Need scala-xml at test runtime
    testRuntimeOnly libs.scala.xml.v2.v13
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.Main'
}
